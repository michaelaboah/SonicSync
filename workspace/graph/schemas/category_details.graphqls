
input ConsoleInput {
  analog_connections: [AnalogConnInput!]
  network_connections: [NetworkConnInput!]  
  faders: Int!
  motorized: Boolean!
  midi: MidiType!
  protocol_inputs: Int!
  signal_protocol: Protocol!
  can_expand: Boolean!
  word_clock: Boolean!
  max_sample_rate: SampleRate!
  power: PowerInput
}

type Console {
# Physical Audio Cable connections
  analog_connections: [AnalogConn!]
  network_connections: [NetworkConn!]  
  # --
  faders: Int! 
  motorized: Boolean!
  word_clock: Boolean!
  midi: MidiType!
  protocol_inputs: Int!
  signal_protocol: Protocol!
  can_expand: Boolean!
  max_sample_rate: SampleRate!
  power: Power!
}

type Processor {
  total_inputs: Int!
  total_ouputs: Int!
  midi: MidiType
  analog_connections: [AnalogConn!]
  network_connections: [NetworkConn!] 
  signal_protocol: Protocol!
  max_sample_rate: SampleRate!
  power: Power!
}

input ProcessorInput {
  total_inputs: Int!
  total_ouputs: Int!
  midi: MidiType
  analog_connections: [AnalogConnInput!]
  network_connections: [NetworkConnInput!] 
  signal_protocol: Protocol!
  max_sample_rate: SampleRate!
  power: PowerInput!
}

type StageBox {
  total_inputs: Int!
  total_ouputs: Int!
  analog_connections: [AnalogConn!]
  word_clock: Boolean!
  network_connections: [NetworkConn!] 
  signal_protocol: Protocol!
  max_sample_rate: SampleRate!
  power: Power!
}

input StageBoxInput {
  total_inputs: Int!
  total_ouputs: Int!
  analog_connections: [AnalogConnInput!]
  word_clock: Boolean!
  network_connections: [NetworkConnInput!] 
  signal_protocol: Protocol!
  max_sample_rate: SampleRate!
  power: PowerInput!
}

type Amplifier {
  total_inputs: Int!
  total_ouputs: Int!
  midi: MidiType
  analog_connections: [AnalogConn!]
  word_clock: Boolean!
  network_connections: [NetworkConn!] 
  signal_protocol: Protocol!
  max_sample_rate: SampleRate!
  power: Power!
}

input AmplifierInput {
  total_inputs: Int!
  total_ouputs: Int!
  midi: MidiType
  analog_connections: [AnalogConnInput!]
  word_clock: Boolean!
  network_connections: [NetworkConnInput!] 
  signal_protocol: Protocol!
  max_sample_rate: SampleRate!
  power: PowerInput!
}

type Monitoring {
  distro: Boolean!
  analog_connections: [AnalogConn!]
  network_connections: [NetworkConn!] 
  signal_protocol: Protocol!
  power: Power!
}

input MonitoringInput {
  distro: Boolean!
  analog_connections: [AnalogConnInput!]
  network_connections: [NetworkConnInput!] 
  signal_protocol: Protocol!
  power: PowerInput!
}

type Computer {
  cpu_processor: String!
  ram_size: Int!
  total_storage: Int!
  # Potentially change to a Date custom scalar
  model_year: Int!
  operating_system: String!
  dedicated_graphics: Boolean
  network_connections: [NetworkConn]
  computer_ports: [ComputerConn]
  power: Power!
}

input ComputerInput {
  cpu_processor: String!
  ram_size: Int!
  total_storage: Int!
  # Potentially change to a Date custom scalar
  model_year: Int!
  operating_system: String!
  dedicated_graphics: Boolean!
  network_connections: [NetworkConnInput!]
  computer_ports: [ComputerConnInput!]
  power: PowerInput!
}

input MicrophoneInput {
  max_spl: Float!
  phantom: Boolean
  low_cut: Boolean
  pad: Boolean
  diaphragm_size: Float
  output_impedance: Float
  connector: Analog
  microphone_type: MicrophoneType!
  pattern: [PolarPattern]!
}

type Microphone {
  max_spl: Float!
  phantom: Boolean
  low_cut: Boolean
  pad: Boolean
  diaphragm_size: Float 
  output_impedance: Float
  connector: Analog
  microphone_type: MicrophoneType!
  pattern: [PolarPattern]!
}


